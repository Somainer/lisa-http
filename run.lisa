(import! debug-server)
(define (main ("static" ...args))
  (import! lisa-http)
  (define path (.getAbsoluteFile (new java.io.File ".")))
  (define route (static-file-route (.getPath path) "/"))
  (define port
    (match args
        ((port) (int port))
        (_ 5050)))
  (define index
    (make-routes!
      ("/" (route "/index.html" context))))
  (define server
    (lisa-http
      :route index
      :route route
      :port port
      :threaded true))
  (->> server
    (start-server)
    &(input $"Serving static files in ${(.getPath path)} on port $port, enter to quit>")
    (stop-server)))

(define (main ("http" ...args))
  (import! lisa-http)
  (import! simple-http)
  (define path (.getAbsoluteFile (new java.io.File ".")))
  (define route (static-file-route (.getPath path) "/"))
  (define port
    (match args
        ((port) (int port))
        (_ 5050)))
  (lisa-http/run
    :route (simple-http-route (.getPath path) "/")
    :port port
    :threaded true))

(define (main ("terminal"))
  (import! lisa-http)
  (define env (.capturedEnv &#))
  (define driver (new moe.roselia.lisa.Repl.ReplDriver System/in System/out System/err))
  (.runUntilQuit driver env))

(define (main (path ...args))
  (import! lisa-http)
  (define **DEBUG** (.contains args (wrap "--debug")))
  (define system/arguments args)
  (println! $"Loading scripts in $path, with arguments $args.")
  (define file (.getAbsoluteFile (new java.io.File path)))
  (if (not (.isFile file))
    (panic! $"$file is not a file."))
  (if **DEBUG**
    (run-debug-server file)
    (load! (.getPath file))))

(define (main _)
  (println! "No script, exiting..."))

(if (value-exists? "system/arguments")
  (main system/arguments))
